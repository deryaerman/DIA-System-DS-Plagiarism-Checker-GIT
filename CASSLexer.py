# Generated from CASS.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,46,343,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,
        1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,1,9,
        1,9,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,
        1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,
        1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,
        1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,
        1,21,1,22,1,22,1,22,1,23,1,23,1,24,1,24,1,24,1,25,1,25,1,25,1,26,
        1,26,1,26,1,27,1,27,1,27,1,28,1,28,1,28,1,29,1,29,1,29,1,30,1,30,
        1,30,1,31,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,36,
        1,36,1,36,1,36,5,36,219,8,36,10,36,12,36,222,9,36,1,36,1,36,1,37,
        1,37,1,37,1,37,5,37,230,8,37,10,37,12,37,233,9,37,1,37,1,37,1,37,
        1,37,1,37,1,38,1,38,5,38,242,8,38,10,38,12,38,245,9,38,1,39,4,39,
        248,8,39,11,39,12,39,249,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,
        1,40,3,40,261,8,40,1,41,4,41,264,8,41,11,41,12,41,265,1,41,1,41,
        4,41,270,8,41,11,41,12,41,271,1,41,1,41,3,41,276,8,41,1,41,4,41,
        279,8,41,11,41,12,41,280,3,41,283,8,41,1,41,1,41,4,41,287,8,41,11,
        41,12,41,288,1,41,1,41,3,41,293,8,41,1,41,4,41,296,8,41,11,41,12,
        41,297,3,41,300,8,41,1,41,4,41,303,8,41,11,41,12,41,304,1,41,1,41,
        3,41,309,8,41,1,41,4,41,312,8,41,11,41,12,41,313,3,41,316,8,41,1,
        42,1,42,1,42,1,42,1,43,1,43,1,44,1,44,1,44,5,44,327,8,44,10,44,12,
        44,330,9,44,1,44,1,44,1,45,1,45,1,45,1,46,4,46,338,8,46,11,46,12,
        46,339,1,46,1,46,1,231,0,47,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,
        9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,
        20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,
        31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,
        42,85,43,87,44,89,45,91,0,93,46,1,0,10,2,0,10,10,13,13,3,0,65,90,
        95,95,97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,2,0,69,69,101,
        101,2,0,43,43,45,45,2,0,65,90,97,122,2,0,34,34,92,92,8,0,34,34,39,
        39,92,92,98,98,102,102,110,110,114,114,116,116,3,0,9,10,13,13,32,
        32,363,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,
        0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,
        0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,
        0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,
        0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,
        0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,
        0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,
        0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,
        0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,
        0,0,93,1,0,0,0,1,95,1,0,0,0,3,97,1,0,0,0,5,99,1,0,0,0,7,101,1,0,
        0,0,9,103,1,0,0,0,11,105,1,0,0,0,13,107,1,0,0,0,15,111,1,0,0,0,17,
        117,1,0,0,0,19,120,1,0,0,0,21,125,1,0,0,0,23,127,1,0,0,0,25,134,
        1,0,0,0,27,142,1,0,0,0,29,146,1,0,0,0,31,152,1,0,0,0,33,159,1,0,
        0,0,35,164,1,0,0,0,37,167,1,0,0,0,39,170,1,0,0,0,41,172,1,0,0,0,
        43,174,1,0,0,0,45,177,1,0,0,0,47,180,1,0,0,0,49,182,1,0,0,0,51,185,
        1,0,0,0,53,188,1,0,0,0,55,191,1,0,0,0,57,194,1,0,0,0,59,197,1,0,
        0,0,61,200,1,0,0,0,63,203,1,0,0,0,65,206,1,0,0,0,67,208,1,0,0,0,
        69,210,1,0,0,0,71,212,1,0,0,0,73,214,1,0,0,0,75,225,1,0,0,0,77,239,
        1,0,0,0,79,247,1,0,0,0,81,260,1,0,0,0,83,315,1,0,0,0,85,317,1,0,
        0,0,87,321,1,0,0,0,89,323,1,0,0,0,91,333,1,0,0,0,93,337,1,0,0,0,
        95,96,5,40,0,0,96,2,1,0,0,0,97,98,5,41,0,0,98,4,1,0,0,0,99,100,5,
        123,0,0,100,6,1,0,0,0,101,102,5,125,0,0,102,8,1,0,0,0,103,104,5,
        61,0,0,104,10,1,0,0,0,105,106,5,59,0,0,106,12,1,0,0,0,107,108,5,
        102,0,0,108,109,5,111,0,0,109,110,5,114,0,0,110,14,1,0,0,0,111,112,
        5,119,0,0,112,113,5,104,0,0,113,114,5,105,0,0,114,115,5,108,0,0,
        115,116,5,101,0,0,116,16,1,0,0,0,117,118,5,105,0,0,118,119,5,102,
        0,0,119,18,1,0,0,0,120,121,5,101,0,0,121,122,5,108,0,0,122,123,5,
        115,0,0,123,124,5,101,0,0,124,20,1,0,0,0,125,126,5,44,0,0,126,22,
        1,0,0,0,127,128,5,114,0,0,128,129,5,101,0,0,129,130,5,116,0,0,130,
        131,5,117,0,0,131,132,5,114,0,0,132,133,5,110,0,0,133,24,1,0,0,0,
        134,135,5,105,0,0,135,136,5,110,0,0,136,137,5,99,0,0,137,138,5,108,
        0,0,138,139,5,117,0,0,139,140,5,100,0,0,140,141,5,101,0,0,141,26,
        1,0,0,0,142,143,5,105,0,0,143,144,5,110,0,0,144,145,5,116,0,0,145,
        28,1,0,0,0,146,147,5,102,0,0,147,148,5,108,0,0,148,149,5,111,0,0,
        149,150,5,97,0,0,150,151,5,116,0,0,151,30,1,0,0,0,152,153,5,100,
        0,0,153,154,5,111,0,0,154,155,5,117,0,0,155,156,5,98,0,0,156,157,
        5,108,0,0,157,158,5,101,0,0,158,32,1,0,0,0,159,160,5,118,0,0,160,
        161,5,111,0,0,161,162,5,105,0,0,162,163,5,100,0,0,163,34,1,0,0,0,
        164,165,5,43,0,0,165,166,5,43,0,0,166,36,1,0,0,0,167,168,5,45,0,
        0,168,169,5,45,0,0,169,38,1,0,0,0,170,171,5,62,0,0,171,40,1,0,0,
        0,172,173,5,60,0,0,173,42,1,0,0,0,174,175,5,60,0,0,175,176,5,61,
        0,0,176,44,1,0,0,0,177,178,5,62,0,0,178,179,5,61,0,0,179,46,1,0,
        0,0,180,181,5,38,0,0,181,48,1,0,0,0,182,183,5,43,0,0,183,184,5,61,
        0,0,184,50,1,0,0,0,185,186,5,45,0,0,186,187,5,61,0,0,187,52,1,0,
        0,0,188,189,5,42,0,0,189,190,5,61,0,0,190,54,1,0,0,0,191,192,5,47,
        0,0,192,193,5,61,0,0,193,56,1,0,0,0,194,195,5,124,0,0,195,196,5,
        124,0,0,196,58,1,0,0,0,197,198,5,38,0,0,198,199,5,38,0,0,199,60,
        1,0,0,0,200,201,5,61,0,0,201,202,5,61,0,0,202,62,1,0,0,0,203,204,
        5,33,0,0,204,205,5,61,0,0,205,64,1,0,0,0,206,207,5,43,0,0,207,66,
        1,0,0,0,208,209,5,45,0,0,209,68,1,0,0,0,210,211,5,47,0,0,211,70,
        1,0,0,0,212,213,5,37,0,0,213,72,1,0,0,0,214,215,5,47,0,0,215,216,
        5,47,0,0,216,220,1,0,0,0,217,219,8,0,0,0,218,217,1,0,0,0,219,222,
        1,0,0,0,220,218,1,0,0,0,220,221,1,0,0,0,221,223,1,0,0,0,222,220,
        1,0,0,0,223,224,6,36,0,0,224,74,1,0,0,0,225,226,5,47,0,0,226,227,
        5,42,0,0,227,231,1,0,0,0,228,230,9,0,0,0,229,228,1,0,0,0,230,233,
        1,0,0,0,231,232,1,0,0,0,231,229,1,0,0,0,232,234,1,0,0,0,233,231,
        1,0,0,0,234,235,5,42,0,0,235,236,5,47,0,0,236,237,1,0,0,0,237,238,
        6,37,0,0,238,76,1,0,0,0,239,243,7,1,0,0,240,242,7,2,0,0,241,240,
        1,0,0,0,242,245,1,0,0,0,243,241,1,0,0,0,243,244,1,0,0,0,244,78,1,
        0,0,0,245,243,1,0,0,0,246,248,7,3,0,0,247,246,1,0,0,0,248,249,1,
        0,0,0,249,247,1,0,0,0,249,250,1,0,0,0,250,80,1,0,0,0,251,252,5,116,
        0,0,252,253,5,114,0,0,253,254,5,117,0,0,254,261,5,101,0,0,255,256,
        5,102,0,0,256,257,5,97,0,0,257,258,5,108,0,0,258,259,5,115,0,0,259,
        261,5,101,0,0,260,251,1,0,0,0,260,255,1,0,0,0,261,82,1,0,0,0,262,
        264,7,3,0,0,263,262,1,0,0,0,264,265,1,0,0,0,265,263,1,0,0,0,265,
        266,1,0,0,0,266,267,1,0,0,0,267,269,5,46,0,0,268,270,7,3,0,0,269,
        268,1,0,0,0,270,271,1,0,0,0,271,269,1,0,0,0,271,272,1,0,0,0,272,
        282,1,0,0,0,273,275,7,4,0,0,274,276,7,5,0,0,275,274,1,0,0,0,275,
        276,1,0,0,0,276,278,1,0,0,0,277,279,7,3,0,0,278,277,1,0,0,0,279,
        280,1,0,0,0,280,278,1,0,0,0,280,281,1,0,0,0,281,283,1,0,0,0,282,
        273,1,0,0,0,282,283,1,0,0,0,283,316,1,0,0,0,284,286,5,46,0,0,285,
        287,7,3,0,0,286,285,1,0,0,0,287,288,1,0,0,0,288,286,1,0,0,0,288,
        289,1,0,0,0,289,299,1,0,0,0,290,292,7,4,0,0,291,293,7,5,0,0,292,
        291,1,0,0,0,292,293,1,0,0,0,293,295,1,0,0,0,294,296,7,3,0,0,295,
        294,1,0,0,0,296,297,1,0,0,0,297,295,1,0,0,0,297,298,1,0,0,0,298,
        300,1,0,0,0,299,290,1,0,0,0,299,300,1,0,0,0,300,316,1,0,0,0,301,
        303,7,3,0,0,302,301,1,0,0,0,303,304,1,0,0,0,304,302,1,0,0,0,304,
        305,1,0,0,0,305,306,1,0,0,0,306,308,7,4,0,0,307,309,7,5,0,0,308,
        307,1,0,0,0,308,309,1,0,0,0,309,311,1,0,0,0,310,312,7,3,0,0,311,
        310,1,0,0,0,312,313,1,0,0,0,313,311,1,0,0,0,313,314,1,0,0,0,314,
        316,1,0,0,0,315,263,1,0,0,0,315,284,1,0,0,0,315,302,1,0,0,0,316,
        84,1,0,0,0,317,318,5,34,0,0,318,319,7,6,0,0,319,320,5,34,0,0,320,
        86,1,0,0,0,321,322,5,42,0,0,322,88,1,0,0,0,323,328,5,34,0,0,324,
        327,3,91,45,0,325,327,8,7,0,0,326,324,1,0,0,0,326,325,1,0,0,0,327,
        330,1,0,0,0,328,326,1,0,0,0,328,329,1,0,0,0,329,331,1,0,0,0,330,
        328,1,0,0,0,331,332,5,34,0,0,332,90,1,0,0,0,333,334,5,92,0,0,334,
        335,7,8,0,0,335,92,1,0,0,0,336,338,7,9,0,0,337,336,1,0,0,0,338,339,
        1,0,0,0,339,337,1,0,0,0,339,340,1,0,0,0,340,341,1,0,0,0,341,342,
        6,46,0,0,342,94,1,0,0,0,22,0,220,231,243,249,260,265,271,275,280,
        282,288,292,297,299,304,308,313,315,326,328,339,1,6,0,0
    ]

class CASSLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    SL_COMMENT = 37
    ML_COMMENT = 38
    ID = 39
    INT = 40
    BOOL = 41
    FLOAT = 42
    CHAR = 43
    POINTER = 44
    STRING = 45
    WS = 46

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'{'", "'}'", "'='", "';'", "'for'", "'while'", 
            "'if'", "'else'", "','", "'return'", "'include'", "'int'", "'float'", 
            "'double'", "'void'", "'++'", "'--'", "'>'", "'<'", "'<='", 
            "'>='", "'&'", "'+='", "'-='", "'*='", "'/='", "'||'", "'&&'", 
            "'=='", "'!='", "'+'", "'-'", "'/'", "'%'", "'*'" ]

    symbolicNames = [ "<INVALID>",
            "SL_COMMENT", "ML_COMMENT", "ID", "INT", "BOOL", "FLOAT", "CHAR", 
            "POINTER", "STRING", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "SL_COMMENT", "ML_COMMENT", 
                  "ID", "INT", "BOOL", "FLOAT", "CHAR", "POINTER", "STRING", 
                  "ESC_SEQ", "WS" ]

    grammarFileName = "CASS.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


